[{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/App.js","messages":[{"ruleId":"react/jsx-key","severity":2,"message":"Missing \"key\" prop for element in iterator","line":15,"column":13,"nodeType":"JSXElement","endLine":17,"endColumn":21}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Home } from './Home'\nimport styled from 'styled-components'\nimport { Viewer } from './sketches/Viewer'\nimport { Redirecter, Redirects } from './Redirecter'\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        <Switch>\n          <Route path=\"/sketch\" component={Viewer} />\n          {Redirects.map(({ from, to }) => (\n            <Route exact path={from}>\n              <Redirecter to={to} />\n            </Route>\n          ))}\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Container>\n    </Router>\n  )\n}\n\nconst Container = styled.div`\n  margin: 0;\n  min-height: 100vh;\n`\n\nexport default App\n","usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/FeedbackShader.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/Home.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/HomepageContent.js","messages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":108,"column":14,"nodeType":"JSXText"},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":115,"column":14,"nodeType":"JSXText"},{"ruleId":"react/jsx-no-target-blank","severity":2,"message":"Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","line":117,"column":13,"nodeType":"JSXOpeningElement","endLine":117,"endColumn":60},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":142,"column":14,"nodeType":"JSXText"},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":143,"column":72,"nodeType":"JSXText"},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":152,"column":20,"nodeType":"JSXText"},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":159,"column":62,"nodeType":"JSXText"},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":159,"column":82,"nodeType":"JSXText"}],"errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { motion as m } from 'framer-motion'\n\nconst mobile = 'screen and (max-width: 767px)'\n\nconst HomepageContent = () => {\n  const [page, setPage] = useState('hello')\n\n  const containerVariants = {\n    hidden: {\n      opacity: 0,\n      y: 200,\n      transition: {\n        staggerChildren: 0.05,\n        type: 'spring',\n        damping: 100,\n        mass: 2\n      }\n    },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.05,\n        type: 'spring',\n        damping: 100,\n        mass: 2\n      }\n    }\n  }\n\n  const pageVariants = {\n    hidden: {\n      pointerEvents: 'none',\n      transition: {\n        staggerChildren: 0.05,\n        type: 'spring',\n        damping: 100,\n        mass: 2\n      }\n    },\n    visible: {\n      pointerEvents: 'all',\n      transition: {\n        staggerChildren: 0.05,\n        type: 'spring',\n        damping: 100,\n        mass: 2\n      }\n    }\n  }\n\n  const slideVariants = {\n    hidden: {\n      y: -400,\n      transition: {\n        type: 'spring',\n        damping: 100,\n        mass: 10,\n        stiffness: 100\n      }\n    },\n    visible: {\n      y: 0,\n      transition: {\n        type: 'spring',\n        damping: 100,\n        mass: 2\n      }\n    }\n  }\n\n  const navVariants = {\n    unselected: {\n      opacity: 0.6\n    },\n    selected: {\n      opacity: 1\n    }\n  }\n  return (\n    <Container initial=\"hidden\" animate=\"visible\" variants={containerVariants}>\n      <Slide>\n        <Title variants={slideVariants}>Dexter J Shepherd</Title>\n      </Slide>\n      <Slide>\n        <Paragraph variants={slideVariants}>\n          <NavButton\n            variants={navVariants}\n            animate={page === 'hello' ? 'selected' : 'unselected'}\n            onClick={() => setPage('hello')}\n          >\n            Hello.\n          </NavButton>\n          <NavButton\n            variants={navVariants}\n            animate={page == 'misc' ? 'selected' : 'unselected'}\n            onClick={() => setPage('misc')}\n          >\n            Misc.\n          </NavButton>\n        </Paragraph>\n      </Slide>\n      <Page initial=\"hidden\" animate={page === 'hello' ? 'visible' : 'hidden'} variants={pageVariants}>\n        <Slide>\n          <Paragraph variants={slideVariants}>\n            I'm a <Underline>front end developer</Underline> and <Underline>graphics programmer</Underline> based in Los\n            Angeles CA.\n          </Paragraph>\n        </Slide>\n\n        <Slide>\n          <Paragraph small variants={slideVariants}>\n            I've spent the last 5 years working at startups with a few corporate clients thrown in here and there. I\n            also teach in the Digital Arts program at{' '}\n            <a target=\"_blank\" href=\"https://calarts.edu/\">\n              California Institute of the Arts\n            </a>\n            .\n          </Paragraph>\n        </Slide>\n        <Slide>\n          <Paragraph small variants={slideVariants}>\n            You can check out my creative projects on{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/dexterwritescode\">\n              Instagram\n            </a>\n            , see who I like to work with{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/dexter-shepherd/\">\n              LinkedIn\n            </a>{' '}\n            and get a feel for my general vibe on{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/dexter_shepherd\">\n              Twitter\n            </a>\n            .\n          </Paragraph>\n        </Slide>\n        <Slide>\n          <Paragraph small variants={slideVariants}>\n            I'm looking for new projects right now. Reach out on one of the platforms above, or send me an{' '}\n            <a href=\"mailto:dexterjshepherd@gmail.com\">email</a> if you're working on something interesting.\n          </Paragraph>\n        </Slide>\n        <Slide>\n          <Paragraph small variants={slideVariants}>\n            The code for this website, along with most of my other projects, is available on{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/DexterShepherd\">\n              Github\n            </a>{' '}\n            if that's your kind of thing.\n          </Paragraph>\n        </Slide>\n      </Page>\n      <Page initial=\"hidden\" animate={page === 'misc' ? 'visible' : 'hidden'} variants={pageVariants}>\n        <Slide>\n          <Paragraph variants={slideVariants}>\n            This is a space for some miscellaneous projects I'm proud of, but don't fit on other platforms.\n          </Paragraph>\n        </Slide>\n        <Slide>\n          <Paragraph small variants={slideVariants}>\n            Occasionally I work on websites for friends or hobby projects.\n            <List>\n              <Item>\n                <span role=\"img\" aria-label=\"a laptop computer\">\n                  💻\n                </span>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://clickbecause.net\">\n                  Mike Leisz\n                </a>\n              </Item>\n            </List>\n          </Paragraph>\n        </Slide>\n\n        <Slide>\n          <Paragraph small variants={slideVariants}>\n            I also write and share tutorials from time to time.\n            <List>\n              <Item>\n                <span role=\"img\" aria-label=\"a word document\">\n                  📄\n                </span>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://blog.kadenze.com/creative-technology/p5-js-crash-course-recreate-art-you-love/\"\n                >\n                  p5.js Crash Course: Recreate Art You Love\n                </a>\n              </Item>\n              <Item>\n                <span role=\"img\" aria-label=\"a word document\">\n                  📄\n                </span>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://blog.kadenze.com/creative-technology/p5-js-crash-course-pumpkin-wave/\"\n                >\n                  p5.js Crash Course II: Pumpkin wave\n                </a>\n              </Item>\n            </List>\n          </Paragraph>\n        </Slide>\n\n        <Slide>\n          <Paragraph small variants={slideVariants}>\n            I teach courses in web development and creative coding. Sometimes I get to speak at meet ups and the like.\n            <List>\n              <Item>\n                <span role=\"img\" aria-label=\"a person teaching\">\n                  👨🏼‍🏫\n                </span>\n                Calarts ICOM-101 - Media and Web Development\n              </Item>\n              <Item>\n                <span role=\"img\" aria-label=\"a person teaching\">\n                  👨🏼‍🏫\n                </span>\n                Calarts ICOM-201/202 - Introduction to Programming\n              </Item>\n              <Item>\n                <span role=\"img\" aria-label=\"a person teaching\">\n                  👨🏼‍🏫\n                </span>\n                Creative Coding Festival LA 2018 - Oscillation\n              </Item>\n            </List>\n          </Paragraph>\n        </Slide>\n      </Page>\n    </Container>\n  )\n}\n\nconst List = styled.ul`\n  padding: 0;\n`\nconst Item = styled.li`\n  list-style: none;\n  span[role='img'] {\n    margin-right: 1em;\n  }\n\n  font-size: 1em;\n`\n\nconst Page = styled(m.div)`\n  position: absolute;\n\n  @media ${mobile} {\n    width: 90%;\n    margin-bottom: 32px;\n  }\n`\n\nconst NavButton = styled(m.button)`\n  border: 0;\n  background: none;\n  padding: 0;\n  margin: 0;\n  font-size: 1em;\n  font-weight: 300;\n  margin-right: 0.5em;\n  font-style: italic;\n\n  &:focus {\n    outline: 0;\n  }\n`\n\nconst Slide = styled.div`\n  overflow: hidden;\n`\n\nconst Underline = styled.span`\n  text-decoration: underline;\n`\n\nconst Container = styled(m.div)`\n  padding: 64px;\n\n  @media ${mobile} {\n    padding: 16px;\n  }\n`\n\nconst Paragraph = styled(m.p)`\n  font-size: 1.5em;\n  max-width: 600px;\n\n  ${({ small }) => (small ? 'font-size: 1.2em;' : '')}\n\n  @media ${mobile} {\n    font-size: 1.2em;\n    ${({ small }) => (small ? 'font-size: 1em;' : '')}\n  }\n`\n\nconst Title = styled(m.h1)`\n  margin: 0;\n  font-size: 5em;\n  font-weight: 300;\n\n  @media ${mobile} {\n    font-size: 2em;\n  }\n`\n\nexport { HomepageContent }\n","usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/HomepageGL.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":8,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":14},{"ruleId":"react/prop-types","severity":2,"message":"'children' is missing in props validation","line":89,"column":21,"nodeType":"Property","endLine":89,"endColumn":29}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useRef, useMemo, useEffect } from 'react'\nimport { Canvas, useFrame, useThree } from 'react-three-fiber'\nimport { WebGLRenderTarget, Color } from 'three'\nimport styled from 'styled-components'\nimport { FeedbackShader } from './FeedbackShader'\nimport { useMotionValue, useSpring } from 'framer-motion'\nimport { ResizeObserver } from '@juggle/resize-observer'\nimport { Link } from 'react-router-dom'\n\nconst useFrameCount = () => {\n  const frameCount = useRef(0)\n\n  useFrame(() => {\n    frameCount.current += 1\n  }, 1)\n\n  return frameCount\n}\n\nconst useRender = () => {\n  useFrame(({ gl, scene, camera }) => {\n    gl.render(scene, camera)\n  }, 100)\n}\n\nconst usePingPongBuffers = (bufferUniformKey, bufferSize) => {\n  const Scene = useRef()\n  const Camera = useRef()\n  const material = useRef()\n  const frame = useFrameCount()\n\n  const buffers = useMemo(() => new Array(2).fill().map(() => new WebGLRenderTarget(bufferSize, bufferSize)), [\n    bufferSize\n  ])\n\n  useFrame(({ gl }) => {\n    if (material.current && Scene.current && Camera.current) {\n      if (bufferUniformKey) {\n        material.current.uniforms[bufferUniformKey].value = buffers[(frame.current + 1) % 2].texture\n      }\n\n      gl.setRenderTarget(buffers[frame.current % 2])\n      gl.render(Scene.current, Camera.current)\n      gl.setRenderTarget(null)\n    }\n  }, 2)\n\n  return {\n    sceneRef: Scene,\n    cameraRef: Camera,\n    materialRef: material\n  }\n}\n\nconst Cube = () => {\n  const mesh = useRef()\n  const { viewport, size } = useThree()\n  const cubeY = useSpring(useMotionValue(-viewport.height || -20), { mass: 20, damping: 50 })\n\n  useEffect(() => {\n    return cubeY.onChange(v => {\n      if (mesh.current) {\n        mesh.current.position.y = v\n      }\n    })\n  }, [cubeY, viewport, size])\n\n  useEffect(() => {\n    cubeY.set(-1)\n  }, [viewport, size, cubeY])\n\n  useFrame(() => {\n    if (mesh.current) {\n      mesh.current.rotation.x += 0.01\n      mesh.current.rotation.y += 0.005\n      mesh.current.rotation.z += 0.015\n      console.log(mesh.current.position.y)\n    }\n  }, 2)\n\n  return (\n    <mesh ref={mesh} position={[0, -1, 0.1]}>\n      <boxBufferGeometry attach=\"geometry\" args={[0.6, 0.6, 0.6]} />\n      <meshNormalMaterial attach=\"material\" />\n    </mesh>\n  )\n}\n\nconst Feedback = ({ children }) => {\n  const bufSize = 2048\n  const { sceneRef, cameraRef, materialRef } = usePingPongBuffers('uLast', bufSize)\n  const frame = useFrameCount()\n\n  useEffect(() => {\n    if (sceneRef.current) {\n      sceneRef.current.background = new Color('white')\n    }\n  }, [sceneRef])\n\n  useFrame(({ clock }) => {\n    if (materialRef.current) {\n      materialRef.current.uniforms.uTime.value = clock.elapsedTime\n      materialRef.current.uniforms.uFade.value = (frame.current % 2) * 0.002\n      materialRef.current.uniforms.uEffect.value = frame.current % 2\n    }\n  })\n\n  const { size, viewport, camera } = useThree()\n  const { width, height } = viewport\n  console.log(viewport)\n\n  const renderCam = useMemo(() => camera.clone(), [camera, size])\n\n  return (\n    <>\n      <primitive object={renderCam} ref={cameraRef} />\n      <scene ref={sceneRef}>\n        <mesh>\n          <planeBufferGeometry attach=\"geometry\" args={[width, height]} />\n          <shaderMaterial\n            ref={materialRef}\n            attach=\"material\"\n            args={[FeedbackShader]}\n            uniforms-uPixSize-value={[1 / bufSize, 1 / bufSize]}\n          />\n        </mesh>\n        {children}\n      </scene>\n    </>\n  )\n}\n\nconst GL = () => {\n  useRender()\n  return (\n    <group position={[0, 0, 0]}>\n      <Feedback>\n        <Cube />\n      </Feedback>\n    </group>\n  )\n}\n\nconst HomepageGL = () => {\n  return (\n    <Container>\n      <Canvas\n        pixelRatio={window.devicePixelRatio}\n        noEvents\n        resize={{ scroll: false, polyfill: ResizeObserver }}\n        gl={{\n          depth: false,\n          powerPreference: 'high-performance',\n          stencil: false\n        }}\n      >\n        <GL />\n      </Canvas>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n`\n\nexport { HomepageGL }\n","usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/NoiseShader.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/Redirecter.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/serviceWorker.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":24,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":14},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":26,"column":31,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":38},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":35,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":31}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/setupTests.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/sketches/Apr4.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'useFrame' is defined but never used.","line":5,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":36},{"ruleId":"react/prop-types","severity":2,"message":"'children' is missing in props validation","line":48,"column":21,"nodeType":"Property","endLine":48,"endColumn":29},{"ruleId":"no-unused-vars","severity":2,"message":"'frame' is assigned a value but never used.","line":51,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":51,"endColumn":14}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Color } from 'three'\nimport { useTransform } from 'framer-motion'\nimport { Canvas, useThree, useFrame } from 'react-three-fiber'\nimport { usePingPongBuffers, useRender, useFrameCount, useMouse, useUpdate } from './hooks'\n\nexport const Shader = {\n  uniforms: {\n    uLast: { type: 'texture' },\n    uMouse: { type: 'vec2', value: [0.5, 0.5] }\n  },\n  vertexShader: `\n  varying vec2 vUv;\n\n  void main() {\n    vUv = uv;\n    vec3 pos = position;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n  }\n  `,\n  fragmentShader: `\n  varying vec2 vUv;\n  uniform sampler2D uLast;\n  uniform vec2 uMouse;\n\n  void main() {\n    vec2 st = vUv; \n\n    st -= vec2(0.5);\n    st *= 1.001;\n    st += vec2(0.5);\n\n\n    vec4 last = texture2D(uLast, st);\n    last.a -= 0.001;\n\n    \n    vec4 a = vec4(1.0, 0.0, 0.0, 1.0);\n    vec4 b = last;\n    vec4 c = mix(a, b, smoothstep(0.05, 0.051, distance(uMouse, vUv)));\n\n    gl_FragColor = c;\n  }\n  `\n}\n\nconst Feedback = ({ children }) => {\n  const bufSize = 1024\n  const { sceneRef, cameraRef, materialRef } = usePingPongBuffers('uLast', bufSize)\n  const frame = useFrameCount()\n  const { mouseX, mouseY: rawMouseY } = useMouse({ restSpeed: 0.001, mass: 0.1, damping: 100 })\n\n  const mouseY = useTransform(rawMouseY, [0, 1], [1, 0])\n\n  useEffect(() => {\n    if (sceneRef.current) {\n      sceneRef.current.background = new Color('white')\n    }\n  }, [sceneRef])\n\n  useUpdate(mouseX, v => {\n    if (materialRef.current) {\n      materialRef.current.uniforms.uMouse.value[0] = v\n    }\n  })\n\n  useUpdate(mouseY, v => {\n    if (materialRef.current) {\n      materialRef.current.uniforms.uMouse.value[1] = v\n    }\n  })\n\n  // useFrame(() => {\n  //   if (materialRef.current) {\n  //     materialRef.current.uniforms.uMouse.value = [mouseX.get(), mouseY.get()]\n  //   }\n  // })\n\n  const { size, viewport, camera } = useThree()\n  const { width, height } = viewport\n\n  const renderCam = useMemo(() => camera.clone(), [camera, size])\n\n  return (\n    <>\n      <primitive object={renderCam} ref={cameraRef} />\n      <scene ref={sceneRef}>\n        <mesh>\n          <planeBufferGeometry attach=\"geometry\" args={[width, height]} />\n          <shaderMaterial ref={materialRef} attach=\"material\" args={[Shader]} />\n        </mesh>\n        {children}\n      </scene>\n    </>\n  )\n}\n\nconst GL = () => {\n  useRender()\n  return <Feedback />\n}\n\nconst Sketch = () => {\n  return (\n    <Container>\n      <Canvas>\n        <GL />\n      </Canvas>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  position: fixed;\n  height: 100vh;\n  width: 100vw;\n`\n\nexport { Sketch }\n","usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/sketches/Aug26.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/sketches/Viewer.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/sketches/hooks.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/sketches/index.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/dextershepherd/workspace/dexterjshepherd.com/src/sketches/sep19.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Canvas' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'GL' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":9}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\nimport styled from 'styled-components'\nimport { Canvas } from 'react-three-fiber'\n\nconst GL = () => {\n  return (\n    <mesh>\n      <boxBufferGeometry attach=\"geometry\" />\n      <meshNormalMaterial attach=\"material\" />\n    </mesh>\n  )\n}\nconst Sketch = () => {\n  return (\n    <Container>\n      {/* <Canvas> */}\n      {/*   <GL /> */}\n      {/* </Canvas> */}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  position: fixed;\n  height: 100vh;\n  width: 100vw;\n  border: 2px solid red;\n`\n\nexport { Sketch }\n","usedDeprecatedRules":[]}]